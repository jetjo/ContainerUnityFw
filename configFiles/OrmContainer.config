<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <configSections>
    <section name="unity" type="Microsoft.Practices.Unity.Configuration.UnityConfigurationSection, Unity.Configuration"></section>
  </configSections>
  <unity xmlns="http://schemas.microsoft.com/practices/2010/unity">

    <assembly name="NHibernate" />
    <namespace name="NHibernate.Cfg" />

    <assembly name="ContainerUnityFw" />
    <namespace name="UnityContainerr" />

    <assembly name="PRJCFG"></assembly>
    <namespace name="AI" />
    <namespace name="AI.Model.Sql" />
    <namespace name="AI.Tool.Sql" />
    <namespace name="PRJCFG" />

    <assembly name="System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"></assembly>
    <namespace name="System.Data.Common" />
    <namespace name="System.Data" />

    <assembly name="MySql.Data"></assembly>
    <namespace name="MySql.Data.MySqlClient" />

    <assembly name="Domains"></assembly>
    <namespace name="Domains.Orm" />

    
    
    <container name="Orms">

      <instance type="string" name="nHibernateCfgFileName" value="hibernate.cfg.xml"></instance>

      <instance type="string" name="ConnectionStringPropertyName" value="connection.connection_string"></instance>

      <!--<instance type="ProjectDirectorySetting">
        <property name="HmiFilesDirectory" type="string" value="Hmis"/>
      </instance>-->
      
      <register type="Configuration" name="OrmCfg">
        <lifetime type="singleton">

        </lifetime>
        <constructor>
          
        </constructor>
        <method name="Configure">
          <param type="string" name="fileName">
            <dependency name="nHibernateCfgFileName"></dependency>
          </param>
          
        </method>
      </register>

      <!--<register type="ISessionFactoryAdaptive" mapTo="SessionFactoryAdaptive" name="ISessionFactoryBasic">
        <lifetime type="singleton" />
        -!-<value dependencyName="SessionFactoryAdaptiveBasic"></value>-!-
        <constructor>
          <param type="Configuration" name="configuration">
            <dependency name="OrmCfg"></dependency>
          </param>
          <param type="string" name="connectionStringPropertyName">
            <dependency name="ConnectionStringPropertyName"></dependency>
          </param>
        </constructor>
      </register>-->

      <register type="ISqlConnection" mapTo="SessionFactoryAdaptive" name="ISqlConnectionBasic">
        <lifetime type="singleton" />
        <!--<value dependencyName="SessionFactoryAdaptiveBasic"></value>-->
        <constructor>
          <param type="Configuration" name="configuration">
            <dependency name="OrmCfg"></dependency>
          </param>
          <param type="string" name="connectionStringPropertyName">
            <dependency name="ConnectionStringPropertyName"></dependency>
          </param>
        </constructor>
      </register>

      <!--<register type="ISqlConnection" mapTo="ISessionFactoryAdaptive" name="ISqlConnectionBasic">
        <lifetime type="singleton" />
        <dependency name="SessionFactoryAdaptiveBasic"></dependency>
      </register>-->

      <register type="IModelService`1" name="IModelServiceSqlBasic" mapTo="ModelServiceSql`1">
        <!--<lifetime type="ContainerControlledLifetimeManager" />-->
        <lifetime type="singleton" />
        <constructor>
          <!--<param type="ISessionFactoryAdaptive" name="sessionFactoryAdaptive">
            <dependency name="ISessionFactoryBasic"></dependency>
          </param>-->
          <param type="ISqlConnection" name="sessionFactoryAdaptive">
            <dependency name="ISqlConnectionBasic"></dependency>
          </param>
        </constructor>
      </register>

      <!--<register type="IModelService`1[Project]" name="IModelServiceSqlBasicProject" mapTo="ModelServiceSql`1[Project]">
        --><!--<lifetime type="ContainerControlledLifetimeManager" />--><!--
        <lifetime type="singleton" />
        <constructor>
          <param type="ISessionFactoryAdaptive" name="sessionFactoryAdaptive">
            <dependency name="ISessionFactoryBasic"></dependency>
          </param>
        </constructor>
      </register>-->

      <register type="ISqlDatabaseOperateStatement" mapTo="SqlDatabaseOperateStatement" name="ISqlDatabaseOperateStatementBasic">
        <lifetime type="singleton" />
        <constructor>
          <param type="Configuration" name="nhCfg">
            <dependency name="OrmCfg"></dependency>
          </param>
        </constructor>
      </register>

      <!--<register type="MySqlConnectionAdaptive" name="MySqlConnectionBasic">
        <lifetime type="TransientLifetimeManager" />
        <constructor>
          <param type="ISessionFactoryAdaptive" name="iSessionFactoryAdaptive">
            <dependency name="ISessionFactoryBasic"></dependency>
          </param>
        </constructor>
        <method name="Open">
        </method>
      </register>

      <register type="IDbConnection" mapTo="MySqlConnectionAdaptive" name="IDbConnectionBasic">
        <lifetime type="TransientLifetimeManager" />
        <constructor>
          <param type="ISessionFactoryAdaptive" name="iSessionFactoryAdaptive">
            <dependency name="ISessionFactoryBasic"></dependency>
          </param>
        </constructor>
        <method name="Open">
        </method>
      </register>-->

      <register type="IDbCommand" mapTo="MySqlCommandAdaptive" name="MySqlCommandAdaptiveBasic">
        <lifetime type="TransientLifetimeManager" />
        <constructor>
          <!--<param type="string" name="cmdText">
           <value value=""/>
          </param>
          <param type="MySqlConnectionAdaptive" name="connection">
            <dependency name="MySqlConnectionBasic"></dependency>
          </param>-->
          <param type="ISqlConnection" name="connection">
            <dependency name="ISqlConnectionBasic"></dependency>
          </param>
        </constructor>
      </register>

      <!--<register type="IDbCommand" mapTo="MySqlCommand" name="MySqlCommandBasic">
        <lifetime type="TransientLifetimeManager" />
        <constructor>
          <param type="string" name="cmdText">
           <value value=""/>
          </param>
        </constructor>
        --><!--<property name="Connection" dependencyName="IDbConnectionBasic" dependencyType="IDbConnection"/>--><!--
      </register>-->

      <register type="IDatabaseService" mapTo="DatabaseService" name="IDatabaseServiceBasic">
        <lifetime type="TransientLifetimeManager" />
        <constructor>
          <param type="IDbCommand" name="sqlCommand">
            <dependency name="MySqlCommandAdaptiveBasic"></dependency>
            <!--<dependency name="MySqlCommandBasic"></dependency>-->
          </param>
          <param type="ISqlDatabaseOperateStatement" name="sqlStatement">
            <dependency name="ISqlDatabaseOperateStatementBasic"></dependency>
          </param>
        </constructor>
      </register>

      <register type="DomainService" name="DomainService">
        <lifetime type="singleton" />
        <constructor>
          <param type="IModelService`1[Domain]" name="modelService">
            <dependency name="IModelServiceSqlBasic"></dependency>
          </param>
          <param type="IDatabaseService" name="databaseService">
            <dependency name="IDatabaseServiceBasic"></dependency>
          </param>
        </constructor>
      </register>

    <!--Open Generics Registration-->

<!--<register type="ICommonCache`1" mapTo="CommonCache`1">
   Use the default constructor 
  <constructor />
</register>-->
      
<!--Close Generics Registration(s)-->

<!--<register type="ICommonCache`1[BusinessType]" mapTo="CommonCache`1[BusinessType]">
  <constructor>
    <param name="cacheKey" value="BusinessTypeCacheKeyOverride" />
  </constructor>
</register>-->
    
  <!--<register type="IDictionary[string, [MyApp.Interfaces.ILogger, MyApp]]"/>-->
    </container>
  </unity>

</configuration>